"""add timezones

Revision ID: 8fed8ecb2ce7
Revises: bd3719e4cecf
Create Date: 2024-01-10 16:30:55.855311

"""
from typing import Sequence, Union

from migrations import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8fed8ecb2ce7'
down_revision: Union[str, None] = 'bd3719e4cecf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('order_deliveries', sa.Column('delivery_datetime', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('order_deliveries', 'delivery_dateTime')
    op.add_column('orders', sa.Column('preparation_start_datetime', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_column('orders', 'order_timing')
    op.drop_column('orders', 'preparation_start_dateTime')
    op.sync_enum_values('public', 'orderdeliveredby', ['IFOOD', 'MERCHANT', 'ROTAFOOD'],
                        [TableReference('order_deliveries', 'delivered_by')],
                        enum_values_to_rename=[])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values('public', 'orderdeliveredby', ['MERCHANT', 'IFOOD', 'ROTAFOOD'],
                        [TableReference('order_deliveries', 'delivered_by')],
                        enum_values_to_rename=[])
    op.add_column('orders', sa.Column('preparation_start_dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('order_timing', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('orders', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('orders', 'preparation_start_datetime')
    op.add_column('order_deliveries', sa.Column('delivery_dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('order_deliveries', 'delivery_datetime')
    # ### end Alembic commands ###
